name: Earthly tag +build

permissions: {}

on:
  push:
    tags:
      - "v*.*.*"

env:
  FORCE_COLOR: 1

jobs:
  arm64-prebuild:
    timeout-minutes: 60
    runs-on: ubuntu-24.04-arm
    permissions:
      packages: write # write pacakges to ghcr

    steps:
      - uses: earthly/actions-setup@43211c7a0eae5344d6d79fb4aaf209c8f8866203 # v1.0.13
        with:
          use-cache: false

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        if: github.token != null
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Run build
        id: build
        run: |
          earthly --ci --push -P +prebuild

  amd64-prebuild:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      packages: write # write pacakges to ghcr

    steps:
      - uses: earthly/actions-setup@43211c7a0eae5344d6d79fb4aaf209c8f8866203 # v1.0.13
        with:
          use-cache: false

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        if: github.token != null
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Run build
        id: build
        run: |
          earthly --ci --push -P +prebuild

  build-images:
    permissions:
      packages: write # write pacakges to ghcr
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      CLI_IMAGE_REF: ${{ steps.image_manifest_metadata.outputs.CLI_IMAGE_REF }}
      INSTALLER_IMAGE_REF: ${{ steps.image_manifest_metadata.outputs.INSTALLER_IMAGE_REF }}
      DISTROBOX_IMAGE_REF: ${{ steps.image_manifest_metadata.outputs.DISTROBOX_IMAGE_REF }}
      CLI_IMAGE_DIGEST: ${{ steps.image_manifest_metadata.outputs.CLI_IMAGE_DIGEST }}
      INSTALLER_IMAGE_DIGEST: ${{ steps.image_manifest_metadata.outputs.INSTALLER_IMAGE_DIGEST }}
      DISTROBOX_IMAGE_DIGEST: ${{ steps.image_manifest_metadata.outputs.DISTROBOX_IMAGE_DIGEST }}
    needs:
      - arm64-prebuild
      - amd64-prebuild

    steps:
      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9

      # Setup repo and add caching
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true

      - uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable
      - uses: earthly/actions-setup@43211c7a0eae5344d6d79fb4aaf209c8f8866203 # v1.0.13
        with:
          use-cache: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run build
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          CARGO_PACKAGE_VERSION="v$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "blue-build") .version')"
          LATEST=$(test "$CARGO_PACKAGE_VERSION" = "$LATEST_TAG" && echo true || echo false)
          earthly --push --ci -P +build-images-all --TAGGED="true" --LATEST="$LATEST"
          
      - name: Install regctl
        uses: regclient/actions/regctl-installer@495560f7c3b510b71ff9f22d6c667c2c429b8e45 # main # zizmor: ignore[stale-action-refs] regctl does not publish tags

      - name: Parse image manifest
        id: image_manifest_metadata
        run: |
          CLI_IMAGE_REF="ghcr.io/blue-build/cli:latest"
          INSTALLER_IMAGE_REF="${CLI_IMAGE_REF}-installer"
          DISTROBOX_IMAGE_REF="${CLI_IMAGE_REF}-distrobox"
          CLI_IMAGE_DIGEST="$(regctl image digest "${CLI_IMAGE_REF}")"
          INSTALLER_IMAGE_DIGEST="$(regctl image digest "${INSTALLER_IMAGE_REF}")"
          DISTROBOX_IMAGE_DIGEST="$(regctl image digest "${DISTROBOX_IMAGE_REF}")"
          echo "CLI_IMAGE_REF=${CLI_IMAGE_REF}" >> $GITHUB_OUTPUT
          echo "INSTALLER_IMAGE_REF=${INSTALLER_IMAGE_REF}" >> $GITHUB_OUTPUT
          echo "DISTROBOX_IMAGE_REF=${DISTROBOX_IMAGE_REF}" >> $GITHUB_OUTPUT
          echo "CLI_IMAGE_DIGEST=${CLI_IMAGE_DIGEST}" >> $GITHUB_OUTPUT
          echo "INSTALLER_IMAGE_DIGEST=${INSTALLER_IMAGE_DIGEST}" >> $GITHUB_OUTPUT
          echo "DISTROBOX_IMAGE_DIGEST=${DISTROBOX_IMAGE_DIGEST}" >> $GITHUB_OUTPUT

  cli-provenance:
    needs: [build-images]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build-images.outputs.CLI_IMAGE_REF }}
      digest: ${{ needs.build-images.outputs.CLI_IMAGE_DIGEST }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  installer-provenance:
    needs: [build-images]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build-images.outputs.INSTALLER_IMAGE_REF }}
      digest: ${{ needs.build-images.outputs.INSTALLER_IMAGE_DIGEST }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  distrobox-provenance:
    needs: [build-images]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build-images.outputs.DISTROBOX_IMAGE_REF }}
      digest: ${{ needs.build-images.outputs.DISTROBOX_IMAGE_DIGEST }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}