# podman/Containerfile
#
# Build a Podman container image from the latest
# stable version of Podman on the Fedoras Updates System.
# https://bodhi.fedoraproject.org/updates/?search=podman
# This image can be used to create a secured container
# that runs safely with privileges within the container.

FROM registry.fedoraproject.org/fedora:latest AS blue-build-cli-base

# When building for multiple-architectures in parallel using emulation
# it's really easy for one/more dnf processes to timeout or mis-count
# the minimum download rates.  Bump both to be extremely forgiving of
# an overworked host.
RUN echo -e "minrate=100\ntimeout=60\n" >> /etc/dnf/dnf.conf

ARG INSTALL_RPMS="podman fuse-overlayfs openssh-clients cpp git-core skopeo dumb-init which rpm-ostree bootc docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"

# Don't include container-selinux and remove
# directories used by dnf that are just taking
# up space.
# TODO: rpm --setcaps... needed due to Fedora (base) image builds
#       being (maybe still?) affected by
#       https://bugzilla.redhat.com/show_bug.cgi?id=1995337#c3
RUN dnf -y makecache && \
    dnf -y update && \
    rpm --setcaps shadow-utils 2>/dev/null && \
    dnf5 -y install dnf5-plugins && \
    dnf5 config-manager addrepo \
        --from-repofile=https://download.docker.com/linux/fedora/docker-ce.repo && \
    dnf -y install $INSTALL_RPMS && \
    dnf clean all && \
    rm -fv /etc/machine-id /var/lib/systemd/random-seed /var/lib/dnf/repos/*/countme && \
    rm -rf /var/cache /var/log/dnf* /var/log/hawkey.log /var/log/yum.*

# It's assumed `podman` will end up with UID/GID 1000
RUN useradd bluebuild && \
    echo -e "root:1:65535\nbluebuild:1:999\nbluebuild:1001:64535" > /etc/subuid && \
    echo -e "root:1:65535\nbluebuild:1:999\nbluebuild:1001:64535" > /etc/subgid

ADD /containers.conf /etc/containers/containers.conf
ADD /podman-containers.conf /home/bluebuild/.config/containers/containers.conf

# Copy & modify the defaults to provide reference if runtime changes needed.
# Changes here are required for running with fuse-overlay storage inside container.
RUN sed -e 's|^#mount_program|mount_program|g' \
           -e '/additionalimage.*/a "/var/lib/shared",' \
           -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
           /usr/share/containers/storage.conf \
           > /etc/containers/storage.conf && \
    cp /etc/containers/storage.conf /home/bluebuild/.config/containers/

RUN mkdir -p /home/bluebuild/.local/share/containers && \
    chown bluebuild:bluebuild -R /home/bluebuild && \
    chmod 644 /etc/containers/containers.conf

# Setup internal Podman to pass subscriptions down from host to internal container
RUN printf '/run/secrets/etc-pki-entitlement:/run/secrets/etc-pki-entitlement\n/run/secrets/rhsm:/run/secrets/rhsm\n' \
    > /etc/containers/mounts.conf

# Note VOLUME options must always happen after the chown call above
# RUN commands can not modify existing volumes
VOLUME /var/lib/containers
VOLUME /home/podman/.local/share/containers

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

ENV _CONTAINERS_USERNS_CONFIGURED="" \
    BUILDAH_ISOLATION=chroot

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

USER bluebuild
ENTRYPOINT ["/entrypoint.sh"]
